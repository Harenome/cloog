#                                                     
#          <|                                         
#           A                                         
#          /.\                                       
#     <|  [""M#                                     
#      A   | #            Clan McCloog Castle         
#     /.\ [""M#           [Generated by Clan 0.8.0]
#    [""M# | #  U"U#U                              
#     | #  | #  \ .:/                                
#     | #  | #___| #                                  
#     | "--'     .-"                                
#   |"-"-"-"-"-#-#-##                            
#   |     # ## ######                                 
#    \       .::::'/                                 
#     \      ::::'/                                  
#   :8a|    # # ##                                    
#   ::88a      ###                                    
#  ::::888a  8a ##::.                                 
#  ::::::888a88a[]::::                                
# :::::::::SUNDOGa8a::::. ..                          
# :::::8::::888:Y8888:::::::::...                     
#::':::88::::888::Y88a______________________________________________________
#:: ::::88a::::88a:Y88a                                  __---__-- __
#' .: ::Y88a:::::8a:Y88a                            __----_-- -------_-__
#  :' ::::8P::::::::::88aa.                   _ _- --  --_ --- __  --- __--
#.::  :::::::::::::::::::Y88as88a...s88aa.
#
# [File generated by the OpenScop Library 0.9.0]

# Original input:
# for (i = 0; i <= W + H; ++i)
#   for (j = max(0, i - W); j <= min(H, i); ++j)
#     S1(i, j);

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 4 0 0 0 2

# Parameters are provided
1
<strings>
W H
</strings>

# Number of statements
1

# =============================================== Statement 1
# Number of relations describing the statement:
4

# ----------------------------------------------  1.1 Domain
DOMAIN
# Union with 2 parts
2
# Union part No.1
8 6 2 0 0 2
# e/i|  i    j |  W    H |  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    1    0    ## -i+W+H >= 0
   1    0    0    1    1    0    ## W+H >= 0
   1    0    1    0    0    0    ## j >= 0
   1   -1    1    1    0    0    ## -i+j+W >= 0
   1    0   -1    0    1    0    ## -j+H >= 0
   1    1   -1    0    0    0    ## i-j >= 0
   1    0    0    0    1    0    ## H >= 0
# Union part No.2
8 6 2 0 0 2
# e/i|  i    j |  W    H |  1  
   1    1    0    0    0    0    ## i >= 0
   1   -1    0    1    1    0    ## -i+W+H >= 0
   1    0    0    1    1    0    ## W+H >= 0
   1    0    1    0    0    0    ## j >= 0
   1   -1    1    1    0    0    ## -i+j+W >= 0
   1    0   -1    0    1    0    ## -j+H >= 0
   1    1   -1    0    0    0    ## i-j >= 0
   1    0    0    1    0    0    ## W >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
5 11 5 2 0 2
# e/i| c1   c2   c3   c4   c5 |  i    j |  W    H |  1  
   0   -1    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    ## c3 == 0
   0    0    0    0   -1    0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  1.3 Access
READ
1 7 1 2 0 2
# e/i| Arr|  i    j |  W    H |  1  
   0   -1    0    0    0    0    1    ## Arr == i

READ
1 7 1 2 0 2
# e/i| Arr|  i    j |  W    H |  1  
   0   -1    0    0    0    0    4    ## Arr == j

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
S1(i, j);
</body>

# =============================================== Extensions
<arrays>
# Number of arrays
5
# Mapping array-identifiers/array-names
1 i
2 W
3 H
4 j
5 S1
</arrays>

</OpenScop>

